# 1. 1. *Обробка введення користувача:* Напишіть програму, яка запитує користувача ввести число, а потім ділить 10 на це число. Використайте конструкцію "try-except" для обробки можливих помилок, таких як введення нуля або рядкового значення.
try:
    number = float(input("Введіть число: "))
    result = 10 / number
    print("Результат: ", result)
except ValueError:
    print("Введено недійсне число!")
except ZeroDivisionError:
    print("Не можна ділити на нуль!")

# 2. 2. *Читання з файлу:*Створіть програму, яка відкриває файл для читання та спробує прочитати його вміст. Використайте конструкцію "try-except", щоб обробити можливі помилки, такі як відсутність файлу або недопустимий формат даних.
try:
    with open("file.txt", "r") as file:
        content = file.read()
        print("Вміст файлу:", content)
except FileNotFoundError:
    print("Файл не знайдено!")
except Exception as e:
    print("Сталася помилка:", e)

# 3. 3. *Робота зі списками:* Напишіть функцію, яка приймає список чисел і повертає їхню суму. Використайте конструкцію "try-except", щоб обробити можливі помилки, такі як передача неспискових даних або наявність непередбачуваних типів даних у списку.
def sum_of_numbers(numbers):
    try:
        total = sum(numbers)
        return total
    except TypeError:
        print("Передано неспискові дані або містяться непередбачувані типи даних у списку.")

# Приклад використання:
numbers = [1, 2, 3, 4, 5]
print("Сума чисел:", sum_of_numbers(numbers))